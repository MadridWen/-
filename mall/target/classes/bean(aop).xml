<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 首先，目标对象和切面都必须是bean -->
    <bean id="subjectMan" class="cn.edu.hrbu.mall.aop.Man">
        <constructor-arg name="name" value="张三"/>
    </bean>

    <bean id="fbi" class="cn.edu.hrbu.mall.aop.Fbi"/>

    <!-- aop代理基于aop:config标签完成 -->
    <aop:config>
        <!-- 声明切面 -->
        <aop:aspect ref="fbi" order="1">
            <!-- 声明切点 -->
            <!-- 通配符*表示任意返回值，cn..Man表示cn包及其子包下的Man类，eat表示Man类的eat方法，(..)表示任意参数 -->
            <!-- execution表达式用表达目标的对象的连接点方法，格式为execution(返回值类型 包名.类名.方法名(参数类型)) -->
            <aop:before method="beforeAdvice" pointcut="execution(* cn..Man.eat(*))"></aop:before>
            <!-- within表达式用于表达目标对象的连接点方法，格式为within(包名.类名) -->
            <aop:after method="afterAdvice" pointcut="within(cn..Man)"></aop:after>

            <aop:after-returning method="afterReturningAdvice" pointcut="execution(* cn..Man.call())" returning="ret"></aop:after-returning>
            <!-- 抛出异常通知 -->
            <aop:after-throwing method="afterThrowingAdvice" pointcut="execution(* cn..Man.drive())" throwing="exception"></aop:after-throwing>
            <!-- 环绕通知 -->
            <aop:around method="aroundAdvice" pointcut="execution(* cn..Man.eat(*))"></aop:around>
        </aop:aspect>
    </aop:config>

</beans>